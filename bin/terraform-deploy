#!/bin/bash
set -e

if [ $# -eq 0 ]
then
  echo "No terraform workspace supplied, aborting."
  exit 1
fi

TERRAFORM_WORKSPACE=$1
GIT_BRANCH=""

case $TERRAFORM_WORKSPACE in
  "production") GIT_BRANCH="master"
    ;;
  "staging") GIT_BRANCH="develop"
    ;;
  "edge") GIT_BRANCH="edge"
    ;;
  "testing") GIT_BRANCH="testing"
    ;;
  *)
    echo "Could not find an known environment with the name: $TERRAFORM_WORKSPACE"
    exit 1
    ;;
esac

echo "Deploying…"
echo "* Terraform workspace: $TERRAFORM_WORKSPACE"
echo "* Git branch: $GIT_BRANCH"
echo

read -r -p "Continue? [y/N] " CONT
if [ "$CONT" = "y" ]; then
  echo
else
  exit 1
fi

echo "-> Checking out and pulling branch ${GIT_BRANCH}…"
git checkout $GIT_BRANCH
git pull origin $GIT_BRANCH

echo "-> Checking for uncommitted changes…"

GIT_DIFF=`git diff-index --name-status HEAD --`
GIT_UNTRACKED=`git ls-files --exclude-standard --others --`

if [ ! "$GIT_DIFF" = "" ]; then
  cat <<EOF

Changes found:

$GIT_DIFF
EOF
fi

if [ ! "$GIT_UNTRACKED" = "" ]; then
  cat <<EOF

Untracked files found:

$GIT_UNTRACKED
EOF
fi

if [ ! "$GIT_DIFF" = "" ] || [ ! "$GIT_UNTRACKED" = "" ]; then
  echo
  read -r -p "Enter 'yes' to continue: " CONT
  if [ "$CONT" = "yes" ]; then
    echo
  else
    exit 1
  fi
fi

echo "-> Checking out terraform workspace ${TERRAFORM_WORKSPACE}…"
terraform workspace select "$TERRAFORM_WORKSPACE"

echo "-> Applying Terraform command on the $TERRAFORM_WORKSPACE workspace…"
terraform apply -var-file="workspace-variables/$TERRAFORM_WORKSPACE.tfvars"
